/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 basic.glb
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useCharacterAnimations } from '../contexts/CharacterAnimations'

const BasicModel = (props) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF(process.env.PUBLIC_URL + '/basic.glb')
  const { setAnimations, animationIndex } = useCharacterAnimations();
  const { actions, names } = useAnimations(animations, group)
  const arm = useRef()


  useEffect(() => {
    setAnimations(names)
  }, [names]);


  useEffect(() => {
    actions[names[animationIndex]].reset().fadeIn(0.5).play()
    return () => {
      actions[names[animationIndex]].fadeOut(0.5);
    };

  }, [animationIndex])



  // TODO: Actually Implement movement
  // async function rotateGrp(action) {
  //   delay(1000)
  //   if (action === 'Left90')
  //     arm.current.rotation.z -= 1.5;
  //   if (action === 'Right90')
  //     arm.current.rotation.z += 1.5;
  // }


  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" ref={arm} rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Alpha_Joints" geometry={nodes.Alpha_Joints.geometry} material={materials.Alpha_Joints_MAT} skeleton={nodes.Alpha_Joints.skeleton} />
          <skinnedMesh name="Alpha_Surface" geometry={nodes.Alpha_Surface.geometry} material={materials.Alpha_Body_MAT} skeleton={nodes.Alpha_Surface.skeleton} />
        </group>
      </group>
    </group>
  )
}

export default BasicModel;

useGLTF.preload(process.env.PUBLIC_URL + '/basic.glb')

